<launch>
  <group ns = "my_robot_driver">
    <arg name="respawn" default="false" />
    <arg name="debug" default="false" />
    <arg name="node_name" default="CAM_L" />
    <arg name="mtu_size" default="1500" />
    <arg name="startup_user_set" default="CurrentSetting" />
    <arg name="enable_status_publisher" default="true" />
    <arg name="enable_current_params_publisher" default="true" />
    <arg name="config_file" default="$(find pylon_camera)/config/default.yaml" />

    <arg unless="$(arg debug)" name="launch_prefix" value="" />
    <arg     if="$(arg debug)" name="launch_prefix" value="gdb -ex run --args" />

    <node name="$(arg node_name)" pkg="pylon_camera" type="pylon_camera_node" output="screen"
          respawn="$(arg respawn)" launch-prefix="$(arg launch_prefix)">
        <rosparam command="load" file="$(arg config_file)" />
        <param name="gige/mtu_size" value="$(arg mtu_size)"/>
        <param name="startup_user_set" value="$(arg startup_user_set)"/>
        <param name="enable_status_publisher" value="$(arg enable_status_publisher)"/>
        <param name="enable_current_params_publisher" value="$(arg enable_current_params_publisher)"/>
    </node>
   
   
  
    <!-- IG1 Sensor node -->
     <remap from= "imu" to = "IMU_L"/> 
    <node name="left_IMU" pkg="openzen_sensor" type="openzen_sensor_node"/>
   <!-- <node name="laser_IMU" pkg="openzen_sensor" type="openzen_sensor_node"/> -->

    <!-- Quaternion to Euler conversion node -->
    <node name="quat_to_euler" pkg="topic_tools" type="transform"
        args="IMU_L/data/orientation IMU_L_RPY geometry_msgs/Vector3 'tf.transformations.euler_from_quaternion([m.x, m.y, m.z, m.w])' --import tf" />
  
  
  
  
  
   <!-- Distance node-->
 

  
      <!-- remap as you wish -->
    <node pkg="distance_sensor" name="distance_node" type="distance_sensor_run.py">
          <param name="PORT" value="/dev/ttyUSB1"/>

          <remap from="out_topic" to="DISTANCE"/>
    </node>
  </group>   



</launch>
